@model EditDoctorViewModel

@{
    ViewBag.Title = "EditDoctor";
    Layout = NazeeranHospitalManagementConstants.LayoutNameConst.LayoutDashboardAdminPartial;
    Page.Title = "Edit Doctor";
}

@if (Model.Errors != null && Model.Errors.Count > 0)
{
    foreach (var error in Model.Errors)
    {
        <div class="panel panel-danger">
            <ul class="list-unstyled">
                <li class="list-group-item-danger">@error</li>
            </ul>
        </div>
    }

    <div class="hidden" id="alertUser">
        <p id="header-message">Failed</p>
        <p id="main-message">An Error Occured While Updating Doctor Recrod..!!!</p>
        <p id="alert-type">warning</p>
        <p id="confirm-button-class">btn-warning</p>
    </div>
}

@if (Model.IsEditSuccessfully)
{
    <div class="hidden" id="alertUser">
        <p id="header-message">Updated</p>
        <p id="main-message">Doctor Recrod Is Updated Sussessfully...!!</p>
        <p id="alert-type">success</p>
        <p id="confirm-button-class">btn-success</p>
    </div>
}

@using (Html.BeginForm())
{
    <div class="hidden hidden-values">
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.Key)
    </div>

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.Gender, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </div>
        </div>

        
        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Cnic, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Cnic, new { htmlAttributes = new { @class = "form-control mask-cnic" } })
                @Html.ValidationMessageFor(model => model.Cnic, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DepartmentName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.SelectedDepartment, Model.Departments, new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Update" class="btn btn-info" id="btnUpdateDoctor" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", actionName: "ViewDoctor", controllerName: "Admin")
</div>

