@model AddDoctorViewModel

@{
    ViewBag.Title = "AddDoctor";
    Layout = "~/Views/Shared/_DashboardLayout.cshtml";
}

<div class="container-fluid">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h2>Add Doctor</h2>
            <hr />
            @if (Model.Errors != null && Model.Errors.Count() != 0)
            {
                @Html.Partial("_DisplayErrors", Model.Errors)
                @*<div class="alert alert-danger alert-dismissable fade in">
                    <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    @MvcHtmlString.Create(string.Join("<br/>", Model.Errors.ToArray()))
                </div>*@
            }

            @Html.ValidationSummary(true, "", new { @class = "text-danger " })
            <div class="form-group">
                @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label col-md-2 text-left" })
                <div class="col-md-10 left">
                    @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2 text-left" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DoctorGender, htmlAttributes: new { @class = "control-label col-md-2 text-left" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.DoctorGender, new SelectList(Enum.GetValues(typeof(Gender))), htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.DoctorGender, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2 text-left" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Cnic, htmlAttributes: new { @class = "control-label col-md-2 text-left" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Cnic, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Cnic, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Departments, htmlAttributes: new { @class = "control-label col-md-2 text-left" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.SelectedDepartment, Model.Departments, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Departments, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</div>
